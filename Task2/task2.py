# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s2aIbnWH0Ru_Ptk9hsI-ANoivZBYq9eI

# **Exploring Supervised Machine Learning**

Task #2 at the DS/ML internship at TSF.

## Simple Linear Regression

In this regression task we will predict the percentage of marks that a student is expected to score based upon the number of hours they studied. This is a simple linear regression task as it involves just two variables.

### Import Libraries and Read Data
Show the first few entries in the data.
"""

import pandas as pd
from matplotlib import pyplot as plt

d_url = "http://bit.ly/w-data"
data = pd.read_csv(d_url)
data.head()

"""### Separate & Split
Separate the data columns into features and labels.
"""

X = data.iloc[:,:-1].values
Y = data.iloc[:,-1].values

"""Split data into training set and test set."""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)

"""### Linear Regression
Create a linear regressor and fit the model using the train set.
"""

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X_train, Y_train)

"""### Test

Test the model by predicting on test set
"""

y_pred = lr.predict(X_test)
pd.DataFrame({"Actual":Y_test, "Predicted":y_pred})

"""Calculate mean absolute error."""

from sklearn.metrics import mean_absolute_error
error = mean_absolute_error(Y_test, y_pred)
print("Error = {}".format(error))

"""### Plot & Predict

Plot the data and the best-fit line found by the model.
"""

line = lr.coef_ * X + lr.intercept_
plt.scatter(X, Y)
plt.plot(X, line)
plt.show()

"""Predict the score as per the hours."""

hours = 9.25
y_out = lr.predict([[hours]])
print("For {} hours, score predicted is {}.".format(hours, y_out[0]))