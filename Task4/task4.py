# -*- coding: utf-8 -*-
"""Task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ElBgf90piM27XnPL1Q-zRqQOQzn4xzg5

# **Exploring Decision Trees**

Task #4 at the TSF internship.

Visualizing the Decision Tree Classifier.

## Import Libraries
"""

import matplotlib.pyplot as plt
import pandas as pd
from sklearn import datasets
from sklearn import tree

"""## Load Dataset"""

data = datasets.load_iris()
iris_x = pd.DataFrame(data.data, columns=data.feature_names)
iris_y = pd.DataFrame({"Target":data.target})

pd.concat([iris_x, iris_y], axis = 1).head(10)

"""## Create a Decision tree classifier"""

dtc = tree.DecisionTreeClassifier()
dtc.fit(iris_x, iris_y)

"""## Visualize the tree

`tree.plot_tree()` is the built-in plotting function in sklearn which uses matplotlib. We can adjust the dimension using the matplotlib functions.

The tree shows the nodes with the probabilities included in the color grading. i.e. Darker the shade, higher its probability.
"""

plt.figure(figsize = (6, 4), dpi=300)
tree.plot_tree(dtc, feature_names = data.feature_names, class_names = data.target_names, filled = True, rounded = True);
plt.title("Iris Classification Tree")
plt.show()

